
/* Mixins */


@mixin mq($point) {
  @if $point==wide {
    @media (min-width: 1200px) {
      @content;
    }
  }
  @else if $point==large {
    @media (max-width: 1199px) and (min-width: 992px) {
      @content;
    }
  }
  @else if $point==medium {
    @media (max-width: 991px) and (min-width: 768px) {
      @content;
    }
  }
  @else if $point==smartphone {
    @media (max-width: 639px) { // This matches the iframes on the site
      @content;
    }
  }
  @else if $point==small-smartphone {
    @media (max-width: 479px) {
      @content;
    }
  }
}

//----------

@mixin well {
  padding: 20px;
  border-radius: 6px;
  background: #eee;
}

$button-base-size:16;

@mixin normal-button {
  font-size:($button-base-size * 1px) + 0.1px; // Font looks nasty at exactly 16px ?!
  //padding: 13em/$button-base-size 20em/$button-base-size 10em/$button-base-size;// Could use this if it wasn't for the extra 0.1px
  padding: 10.44em/$button-base-size 20em/$button-base-size 11.44em/$button-base-size; //Fiddly because normal buttons need to be 44px high to match fields
  color: $button-text;
  border: 0;
  border-radius: $button-radius;
  background-color: $button-background;
  text-decoration: none;
  display: inline-block;
  cursor:pointer;
  @include transition(color .2s, background .2s);
    //&:hover {
    //background-color: lighten($button-color,10%);
  //}
  &:hover {
    background: $button-text; 
    color: $button-background;
  }
  @include mq(smartphone) {
    font-size: $button-base-size*0.8px;
  }
}

@mixin large-button {
  @include normal-button;
  //padding: 18em/$button-base-size 25em/$button-base-size 15em/$button-base-size; // Padding ajustment not needed
  font-size: 28px;
  @include mq(smartphone) {
    font-size: 24px;
  }
}

@mixin small-button {
  @include normal-button;
  padding: 8em/$button-base-size 15em/$button-base-size 8em/$button-base-size;
  font-size: 14px;
  @include mq(smartphone) {
    font-size: 13px;
  }
}

@mixin mini-button {
  @include normal-button;
  padding: 6em/$button-base-size 9em/$button-base-size 5em/$button-base-size;
  font-size: 12px;
  @include mq(smartphone) {
    font-size: 11px;
  }
}

@mixin quiet-button {
  color:$button-color;
  background:lighten($button-color, 50%);
}

@mixin sentence-case {
  text-transform: lowercase;
  &:first-letter {
    text-transform: uppercase;
  }
}


//----------

@mixin clearfix {
  &:before,
  &:after {
    display: table;
    content: " ";
  }
  &:after {
    clear: both;
  }
}

.clearfix {
  &:after {
    display: table;
    clear: both;
    content: "";
  }
}

@mixin kellum() {
  overflow: hidden;
  white-space: nowrap;
  text-indent: 100%;
}

@mixin border-radius($radius) {
  position: relative;
  -webkit-border-radius: $radius;
  border-radius: $radius;

  behavior: url("/PIE.htc");
}

@mixin transform($string) {
  -webkit-transform: $string;
  -moz-transform: $string;
  -ms-transform: $string;
  -o-transform: $string;
  transform: $string;
}

@mixin scale ($factor) {
  -webkit-transform: scale($factor);
  -moz-transform: scale($factor);
  -ms-transform: scale($factor);
  -o-transform: scale($factor);
  transform: scale($factor);
}

@mixin transition($arguments...) {
  -webkit-transition: $arguments;
  -moz-transition: $arguments;
  -o-transition: $arguments;
  transition: $arguments;
}

@mixin transition-delay($delay...) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin translate ($x, $y: 0) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin box-shadow ($string) {
  -webkit-box-shadow: $string;
  -moz-box-shadow: $string;
  box-shadow: $string;
}
