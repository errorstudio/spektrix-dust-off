
/* Mixins */


@mixin mq($point) {
  @if $point==wide {
    @media (min-width: 1200px) {
      @content;
    }
  }
  @else if $point==large {
    @media (max-width: 1199px) and (min-width: 992px) {
      @content;
    }
  }
  @else if $point==medium {
    @media (max-width: 991px) and (min-width: 768px) {
      @content;
    }
  }
  @else if $point==smartphone {
    @media (max-width: 767px) {
      @content;
    }
  }
}

//----------

@mixin well {
  padding: 20px;
  border-radius: 6px;
  background: #eee;
}

@mixin normal-button {
  height: 44px;
  line-height: 2.2;
  padding: 5px 20px 4px;
  color: white;
  border: 0;
  border-radius: 3px;
  background-color: $button-color;
  text-decoration: none;
  display: inline-block;
  &:hover {
    background-color: lighten($button-color,10%);
  }
}





@mixin large-button {
  @include normal-button;
  height: 60px;
  line-height: 1.1;
  padding: 14px 25px 16px;
  font-size: 28px;
}

@mixin small-button {
  @include normal-button;
  height: auto;
  line-height: 1.4;
  padding: 5px 11px 4px;
  font-size: 14px;
}

@mixin mini-button {
  @include normal-button;
  height: auto;
  line-height: 1.2;
  padding: 5px 11px 4px;
  font-size: 12px;
}

@mixin quiet-button {
  color:$button-color;
  background:lighten($button-color, 50%);
}

@mixin sentence-case {
  text-transform: lowercase;
  &:first-letter {
    text-transform: uppercase;
  }
}


//----------

@mixin clearfix {
  &:before,
  &:after {
    display: table;
    content: " ";
  }
  &:after {
    clear: both;
  }
}

.clearfix {
  &:after {
    display: table;
    clear: both;
    content: "";
  }
}

@mixin kellum() {
  overflow: hidden;
  white-space: nowrap;
  text-indent: 100%;
}

@mixin border-radius($radius) {
  position: relative;
  -webkit-border-radius: $radius;
  border-radius: $radius;

  behavior: url("/PIE.htc");
}

@mixin transform($string) {
  -webkit-transform: $string;
  -moz-transform: $string;
  -ms-transform: $string;
  -o-transform: $string;
  transform: $string;
}

@mixin scale ($factor) {
  -webkit-transform: scale($factor);
  -moz-transform: scale($factor);
  -ms-transform: scale($factor);
  -o-transform: scale($factor);
  transform: scale($factor);
}

@mixin transition($arguments...) {
  -webkit-transition: $arguments;
  -moz-transition: $arguments;
  -o-transition: $arguments;
  transition: $arguments;
}

@mixin transition-delay($delay...) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  -o-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin translate ($x, $y: 0) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin box-shadow ($string) {
  -webkit-box-shadow: $string;
  -moz-box-shadow: $string;
  box-shadow: $string;
}
